/**********************************************************************
 * Extern for ReactDataGrid
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ReactDataGrid = {
  "contextTypes": {
    "metricsComputator": {
      "isRequired": function () {}
    }
  },
  "propTypes": {
    "columns": function () {},
    "minColumnWidth": {
      "isRequired": function () {}
    },
    "columnEquality": {
      "isRequired": function () {}
    },
    "onColumnResize": {
      "isRequired": function () {}
    },
    "rowHeight": function () {},
    "headerRowHeight": {
      "isRequired": function () {}
    },
    "minHeight": function () {},
    "minWidth": {
      "isRequired": function () {}
    },
    "enableRowSelect": {
      "isRequired": function () {}
    },
    "onRowUpdated": {
      "isRequired": function () {}
    },
    "rowGetter": function () {},
    "rowsCount": function () {},
    "toolbar": {
      "isRequired": function () {}
    },
    "enableCellSelect": {
      "isRequired": function () {}
    },
    "onFilter": {
      "isRequired": function () {}
    },
    "onCellCopyPaste": {
      "isRequired": function () {}
    },
    "onCellsDragged": {
      "isRequired": function () {}
    },
    "onAddFilter": {
      "isRequired": function () {}
    },
    "onGridSort": {
      "isRequired": function () {}
    },
    "onDragHandleDoubleClick": {
      "isRequired": function () {}
    },
    "onGridRowsUpdated": {
      "isRequired": function () {}
    },
    "onRowSelect": {
      "isRequired": function () {}
    },
    "rowKey": {
      "isRequired": function () {}
    },
    "rowScrollTimeout": {
      "isRequired": function () {}
    },
    "onClearFilters": {
      "isRequired": function () {}
    },
    "contextMenu": {
      "isRequired": function () {}
    },
    "cellNavigationMode": {
      "isRequired": function () {}
    },
    "onCellSelected": {
      "isRequired": function () {}
    },
    "onCellDeSelected": {
      "isRequired": function () {}
    },
    "onCellExpand": {
      "isRequired": function () {}
    },
    "enableDragAndDrop": {
      "isRequired": function () {}
    },
    "onRowExpandToggle": {
      "isRequired": function () {}
    },
    "draggableHeaderCell": {
      "isRequired": function () {}
    },
    "getValidFilterValues": {
      "isRequired": function () {}
    },
    "rowSelection": {
      "isRequired": function () {}
    },
    "onRowClick": {
      "isRequired": function () {}
    },
    "onGridKeyUp": {
      "isRequired": function () {}
    },
    "onGridKeyDown": {
      "isRequired": function () {}
    },
    "rowGroupRenderer": {
      "isRequired": function () {}
    },
    "rowActionsCell": {
      "isRequired": function () {}
    },
    "onCheckCellIsEditable": {
      "isRequired": function () {}
    },
    "overScan": {
      "isRequired": function () {}
    }
  },
  "getDefaultProps": {
    "isReactClassApproved": {}
  },
  "childContextTypes": {
    "metricsComputator": {
      "isRequired": function () {}
    }
  },
  "displayName": {},
  "defaultProps": {
    "minColumnWidth": {},
    "columnEquality": function () {},
    "enableCellSelect": {},
    "tabIndex": {},
    "rowHeight": {},
    "enableRowSelect": {},
    "minHeight": {},
    "rowKey": {},
    "rowScrollTimeout": {},
    "cellNavigationMode": {},
    "overScan": {
      "colsStart": {},
      "colsEnd": {},
      "rowsStart": {},
      "rowsEnd": {}
    }
  },
  "Row": {
    "displayName": {},
    "propTypes": {
      "height": function () {},
      "columns": function () {},
      "row": function () {},
      "cellRenderer": {
        "isRequired": function () {}
      },
      "cellMetaData": {
        "isRequired": function () {}
      },
      "isSelected": {
        "isRequired": function () {}
      },
      "idx": function () {},
      "expandedRows": {
        "isRequired": function () {}
      },
      "extraClasses": {
        "isRequired": function () {}
      },
      "forceUpdate": {
        "isRequired": function () {}
      },
      "subRowDetails": {
        "isRequired": function () {}
      },
      "isRowHovered": {
        "isRequired": function () {}
      },
      "colVisibleStart": function () {},
      "colVisibleEnd": function () {},
      "colDisplayStart": function () {},
      "colDisplayEnd": function () {},
      "isScrolling": function () {}
    },
    "getDefaultProps": {
      "isReactClassApproved": {}
    },
    "defaultProps": {
      "cellRenderer": {
        "displayName": {},
        "propTypes": {
          "rowIdx": function () {},
          "idx": function () {},
          "selected": {
            "isRequired": function () {}
          },
          "selectedColumn": {
            "isRequired": function () {}
          },
          "height": {
            "isRequired": function () {}
          },
          "tabIndex": {
            "isRequired": function () {}
          },
          "ref": {
            "isRequired": function () {}
          },
          "column": function () {},
          "value": function () {},
          "isExpanded": {
            "isRequired": function () {}
          },
          "isRowSelected": {
            "isRequired": function () {}
          },
          "cellMetaData": function () {},
          "handleDragStart": {
            "isRequired": function () {}
          },
          "className": {
            "isRequired": function () {}
          },
          "cellControls": {
            "isRequired": function () {}
          },
          "rowData": function () {},
          "forceUpdate": {
            "isRequired": function () {}
          },
          "expandableOptions": function () {},
          "isScrolling": function () {}
        },
        "getDefaultProps": {
          "isReactClassApproved": {}
        },
        "defaultProps": {
          "tabIndex": {},
          "isExpanded": {},
          "value": {}
        }
      },
      "isSelected": {},
      "height": {}
    }
  },
  "Cell": {
    "displayName": {},
    "propTypes": {
      "rowIdx": function () {},
      "idx": function () {},
      "selected": {
        "isRequired": function () {}
      },
      "selectedColumn": {
        "isRequired": function () {}
      },
      "height": {
        "isRequired": function () {}
      },
      "tabIndex": {
        "isRequired": function () {}
      },
      "ref": {
        "isRequired": function () {}
      },
      "column": function () {},
      "value": function () {},
      "isExpanded": {
        "isRequired": function () {}
      },
      "isRowSelected": {
        "isRequired": function () {}
      },
      "cellMetaData": function () {},
      "handleDragStart": {
        "isRequired": function () {}
      },
      "className": {
        "isRequired": function () {}
      },
      "cellControls": {
        "isRequired": function () {}
      },
      "rowData": function () {},
      "forceUpdate": {
        "isRequired": function () {}
      },
      "expandableOptions": function () {},
      "isScrolling": function () {}
    },
    "getDefaultProps": {
      "isReactClassApproved": {}
    },
    "defaultProps": {
      "tabIndex": {},
      "isExpanded": {},
      "value": {}
    }
  }
};
ReactDataGrid.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillUnmount": function () {},
  "registerMetrics": function () {},
  "getMetric": function () {},
  "DOMMetrics": function () {},
  "componentWillReceiveProps": function () {},
  "getTotalWidth": function () {},
  "getColumnMetricsType": function () {},
  "getColumn": function () {},
  "getSize": function () {},
  "metricsUpdated": function () {},
  "createColumnMetrics": function () {},
  "onColumnResize": function () {},
  "getChildContext": function () {},
  "getMetricImpl": function () {},
  "registerMetricsImpl": function () {},
  "unregisterMetricsFor": function () {},
  "updateMetrics": function () {},
  "onKeyDown": function () {},
  "onKeyUp": function () {},
  "isKeyDown": function () {},
  "isSingleKeyDown": function () {},
  "isKeyPrintable": function () {},
  "isKeyExplicitlyHandled": function () {},
  "isCtrlKeyHeldDown": function () {},
  "checkAndCall": function () {},
  "getInitialState": function () {},
  "hasSelectedCellChanged": function () {},
  "onContextMenuHide": function () {},
  "onColumnEvent": function () {},
  "onSelect": function () {},
  "onCellClick": function () {},
  "onCellContextMenu": function () {},
  "onCellDoubleClick": function () {},
  "onViewportDoubleClick": function () {},
  "onPressArrowUp": function () {},
  "onPressArrowDown": function () {},
  "onPressArrowLeft": function () {},
  "onPressArrowRight": function () {},
  "onPressTab": function () {},
  "onPressEnter": function () {},
  "onPressDelete": function () {},
  "onPressEscape": function () {},
  "onPressBackspace": function () {},
  "onPressChar": function () {},
  "onPressKeyWithCtrl": function () {},
  "onGridRowsUpdated": function () {},
  "onCellCommit": function () {},
  "onDragStart": function () {},
  "onToggleFilter": function () {},
  "onDragHandleDoubleClick": function () {},
  "onCellExpand": function () {},
  "onRowExpandToggle": function () {},
  "handleDragStart": function () {},
  "handleDragEnd": function () {},
  "handleDragEnter": function () {},
  "handleTerminateDrag": function () {},
  "handlePaste": function () {},
  "handleCancelCopy": function () {},
  "handleCopy": function () {},
  "handleSort": function () {},
  "getSelectedRow": function () {},
  "useNewRowSelection": function () {},
  "handleShiftSelect": function () {},
  "handleNewRowSelect": function () {},
  "handleRowSelect": function () {},
  "handleCheckboxChange": function () {},
  "getScrollOffSet": function () {},
  "getRowOffsetHeight": function () {},
  "getHeaderRows": function () {},
  "getInitialSelectedRows": function () {},
  "getRowSelectionProps": function () {},
  "getSelectedRows": function () {},
  "getSelectedValue": function () {},
  "moveSelectedCell": function () {},
  "getNbrColumns": function () {},
  "calculateNextSelectionPosition": function () {},
  "isAtLastCellInRow": function () {},
  "isAtLastRow": function () {},
  "isAtFirstCellInRow": function () {},
  "isAtFirstRow": function () {},
  "openCellEditor": function () {},
  "scrollToColumn": function () {},
  "setActive": function () {},
  "setInactive": function () {},
  "isActive": function () {},
  "setupGridColumns": function () {},
  "copyPasteEnabled": function () {},
  "dragEnabled": function () {},
  "renderToolbar": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGrid.Row.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getColumn": function () {},
  "spliceColumn": function () {},
  "getSize": function () {},
  "canEdit": function () {},
  "shouldComponentUpdate": function () {},
  "handleDragEnter": function () {},
  "getSelectedColumn": function () {},
  "getCellRenderer": function () {},
  "getCell": function () {},
  "getCells": function () {},
  "getRowHeight": function () {},
  "getCellValue": function () {},
  "isContextMenuDisplayed": function () {},
  "getExpandableOptions": function () {},
  "setScrollLeft": function () {},
  "getKnownDivProps": function () {},
  "renderCell": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGrid.Row.defaultProps.cellRenderer.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentDidUpdate": function () {},
  "shouldComponentUpdate": function () {},
  "onCellClick": function () {},
  "onCellContextMenu": function () {},
  "onCellDoubleClick": function () {},
  "onCellExpand": function () {},
  "onCellKeyDown": function () {},
  "onDragHandleDoubleClick": function () {},
  "onDragOver": function () {},
  "getStyle": function () {},
  "getFormatter": function () {},
  "getRowData": function () {},
  "getFormatterDependencies": function () {},
  "getCellClass": function () {},
  "getUpdateCellClass": function () {},
  "isColumnSelected": function () {},
  "isSelected": function () {},
  "isActive": function () {},
  "isCellSelectionChanging": function () {},
  "isCellSelectEnabled": function () {},
  "hasChangedDependentValues": function () {},
  "applyUpdateClass": function () {},
  "setScrollLeft": function () {},
  "isCopied": function () {},
  "isDraggedOver": function () {},
  "wasDraggedOver": function () {},
  "isDraggedCellChanging": function () {},
  "isCopyCellChanging": function () {},
  "isDraggedOverUpwards": function () {},
  "isDraggedOverDownwards": function () {},
  "checkFocus": function () {},
  "canEdit": function () {},
  "canExpand": function () {},
  "createColumEventCallBack": function () {},
  "createCellEventCallBack": function () {},
  "createEventDTO": function () {},
  "getEvents": function () {},
  "getKnownDivProps": function () {},
  "renderCellContent": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGrid.Cell.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentDidUpdate": function () {},
  "shouldComponentUpdate": function () {},
  "onCellClick": function () {},
  "onCellContextMenu": function () {},
  "onCellDoubleClick": function () {},
  "onCellExpand": function () {},
  "onCellKeyDown": function () {},
  "onDragHandleDoubleClick": function () {},
  "onDragOver": function () {},
  "getStyle": function () {},
  "getFormatter": function () {},
  "getRowData": function () {},
  "getFormatterDependencies": function () {},
  "getCellClass": function () {},
  "getUpdateCellClass": function () {},
  "isColumnSelected": function () {},
  "isSelected": function () {},
  "isActive": function () {},
  "isCellSelectionChanging": function () {},
  "isCellSelectEnabled": function () {},
  "hasChangedDependentValues": function () {},
  "applyUpdateClass": function () {},
  "setScrollLeft": function () {},
  "isCopied": function () {},
  "isDraggedOver": function () {},
  "wasDraggedOver": function () {},
  "isDraggedCellChanging": function () {},
  "isCopyCellChanging": function () {},
  "isDraggedOverUpwards": function () {},
  "isDraggedOverDownwards": function () {},
  "checkFocus": function () {},
  "canEdit": function () {},
  "canExpand": function () {},
  "createColumEventCallBack": function () {},
  "createCellEventCallBack": function () {},
  "createEventDTO": function () {},
  "getEvents": function () {},
  "getKnownDivProps": function () {},
  "renderCellContent": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
/**********************************************************************
 * End Generated Extern for ReactDataGrid
 /**********************************************************************/
