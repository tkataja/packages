/**********************************************************************
 * Extern for ReactDataGridPlugins
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ReactDataGridPlugins = {
  "Editors": {
    "AutoComplete": {
      "displayName": {},
      "propTypes": {
        "onCommit": {
          "isRequired": function () {}
        },
        "options": {
          "isRequired": function () {}
        },
        "label": {
          "isRequired": function () {}
        },
        "value": {
          "isRequired": function () {}
        },
        "height": {
          "isRequired": function () {}
        },
        "valueParams": {
          "isRequired": function () {}
        },
        "column": {
          "isRequired": function () {}
        },
        "resultIdentifier": {
          "isRequired": function () {}
        },
        "search": {
          "isRequired": function () {}
        },
        "onKeyDown": {
          "isRequired": function () {}
        },
        "onFocus": {
          "isRequired": function () {}
        },
        "editorDisplayValue": {
          "isRequired": function () {}
        }
      },
      "getDefaultProps": {
        "isReactClassApproved": {}
      },
      "defaultProps": {
        "resultIdentifier": {}
      }
    },
    "DropDownEditor": {
      "propTypes": {
        "options": function () {}
      }
    },
    "SimpleTextEditor": {
      "propTypes": {
        "onKeyDown": function () {},
        "value": function () {},
        "onBlur": function () {},
        "column": function () {},
        "commit": function () {}
      }
    },
    "CheckboxEditor": {
      "displayName": {},
      "propTypes": {
        "value": {
          "isRequired": function () {}
        },
        "rowIdx": {
          "isRequired": function () {}
        },
        "column": {
          "isRequired": function () {}
        },
        "dependentValues": {
          "isRequired": function () {}
        }
      }
    },
    "ContainerEditorWrapper": function () {}
  },
  "Formatters": {
    "ImageFormatter": {
      "displayName": {},
      "propTypes": {
        "value": function () {}
      }
    },
    "DropDownFormatter": {
      "displayName": {},
      "propTypes": {
        "options": function () {},
        "value": function () {}
      }
    }
  },
  "Toolbar": {
    "displayName": {},
    "propTypes": {
      "onAddRow": {
        "isRequired": function () {}
      },
      "onToggleFilter": {
        "isRequired": function () {}
      },
      "enableFilter": {
        "isRequired": function () {}
      },
      "numberOfRows": {
        "isRequired": function () {}
      },
      "addRowButtonText": {
        "isRequired": function () {}
      },
      "filterRowsButtonText": {
        "isRequired": function () {}
      }
    },
    "getDefaultProps": {
      "isReactClassApproved": {}
    },
    "defaultProps": {
      "enableAddRow": {},
      "addRowButtonText": {},
      "filterRowsButtonText": {}
    }
  },
  "Menu": {
    "__esModule": {},
    "ContextMenu": {
      "propTypes": {
        "children": {
          "isRequired": function () {}
        }
      }
    },
    "MenuHeader": {
      "propTypes": {
        "children": {
          "isRequired": function () {}
        }
      }
    },
    "MenuItem": {
      "displayName": {},
      "propTypes": {
        "onClick": function () {},
        "data": {
          "isRequired": function () {}
        },
        "disabled": {
          "isRequired": function () {}
        },
        "preventClose": {
          "isRequired": function () {}
        }
      },
      "getDefaultProps": {
        "isReactClassApproved": {}
      },
      "defaultProps": {
        "disabled": {},
        "data": {},
        "attributes": {}
      }
    },
    "monitor": {
      "getItem": function () {},
      "getPosition": function () {},
      "hideMenu": function () {}
    },
    "SubMenu": {
      "displayName": {},
      "propTypes": {
        "title": function () {},
        "disabled": {
          "isRequired": function () {}
        },
        "hoverDelay": {
          "isRequired": function () {}
        }
      },
      "getDefaultProps": {
        "isReactClassApproved": {}
      },
      "defaultProps": {
        "hoverDelay": {}
      }
    },
    "connect": function () {},
    "ContextMenuLayer": function () {}
  },
  "Data": {
    "Selectors": {
      "getRows": {
        "resultFunc": function () {},
        "recomputations": function () {},
        "resetRecomputations": function () {}
      },
      "getSelectedRowsByKey": {
        "resultFunc": function () {},
        "recomputations": function () {},
        "resetRecomputations": function () {}
      }
    }
  },
  "ToolsPanel": {
    "__esModule": {},
    "AdvancedToolbar": {
      "defaultProps": {
        "enableAddRow": {}
      },
      "propTypes": {
        "children": {
          "isRequired": function () {}
        }
      }
    },
    "GroupedColumnsPanel": {
      "DecoratedComponent": {
        "defaultProps": {
          "noColumnsSelectedMessage": {},
          "panelDescription": {}
        },
        "propTypes": {
          "isOver": function () {},
          "connectDropTarget": {
            "isRequired": function () {}
          },
          "canDrop": function () {},
          "groupBy": {
            "isRequired": function () {}
          },
          "noColumnsSelectedMessage": {
            "isRequired": function () {}
          },
          "panelDescription": {
            "isRequired": function () {}
          },
          "onColumnGroupDeleted": {
            "isRequired": function () {}
          }
        }
      },
      "displayName": {},
      "contextTypes": {
        "dragDropManager": function () {}
      }
    }
  },
  "Draggable": {
    "Container": {
      "DecoratedComponent": {
        "propTypes": {
          "children": function () {},
          "getDragPreviewRow": {
            "isRequired": function () {}
          }
        }
      },
      "displayName": {},
      "childContextTypes": {
        "dragDropManager": function () {}
      }
    },
    "DraggableHeaderCell": {
      "DecoratedComponent": {
        "propTypes": {
          "connectDragSource": function () {},
          "connectDragPreview": function () {},
          "isDragging": function () {}
        }
      },
      "displayName": {},
      "contextTypes": {
        "dragDropManager": function () {}
      }
    },
    "RowActionsCell": {
      "DecoratedComponent": {
        "propTypes": {
          "rowIdx": function () {},
          "connectDragSource": function () {},
          "connectDragPreview": function () {},
          "isDragging": function () {},
          "isRowHovered": {
            "isRequired": function () {}
          },
          "column": {
            "isRequired": function () {}
          },
          "dependentValues": {
            "isRequired": function () {}
          },
          "value": {
            "isRequired": function () {}
          },
          "rowSelection": function () {}
        },
        "defaultProps": {
          "rowIdx": {}
        }
      },
      "displayName": {},
      "contextTypes": {
        "dragDropManager": function () {}
      }
    },
    "DropTargetRowContainer": function () {}
  },
  "Filters": {
    "NumericFilter": {
      "propTypes": {
        "onChange": function () {},
        "column": {
          "isRequired": function () {}
        }
      }
    },
    "AutoCompleteFilter": {
      "propTypes": {
        "onChange": function () {},
        "column": {
          "isRequired": function () {}
        },
        "getValidFilterValues": {
          "isRequired": function () {}
        }
      }
    }
  },
  "Utils": {
    "rowComparer": function () {}
  }
};
ReactDataGridPlugins.Editors.AutoComplete.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "handleChange": function () {},
  "getValue": function () {},
  "getEditorDisplayValue": function () {},
  "getInputNode": function () {},
  "getLabel": function () {},
  "hasResults": function () {},
  "isFocusedOnSuggestion": function () {},
  "constuctValueFromParams": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.Editors.DropDownEditor.prototype = {
  "getInputNode": function () {},
  "onClick": function () {},
  "onDoubleClick": function () {},
  "render": function () {},
  "renderOptions": function () {},
  "getStyle": function () {},
  "getValue": function () {},
  "inheritContainerStyles": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Editors.SimpleTextEditor.prototype = {
  "render": function () {},
  "getStyle": function () {},
  "getValue": function () {},
  "getInputNode": function () {},
  "inheritContainerStyles": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Editors.CheckboxEditor.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "handleChange": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.Formatters.ImageFormatter.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "_load": function () {},
  "_onLoad": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentDidMount": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.Formatters.DropDownFormatter.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "shouldComponentUpdate": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.Toolbar.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "onAddRow": function () {},
  "renderAddRowButton": function () {},
  "renderToggleFilterButton": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.Menu.ContextMenu.prototype = {
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Menu.MenuHeader.prototype = {
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Menu.MenuItem.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "handleClick": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.Menu.SubMenu.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUnmount": function () {},
  "handleClick": function () {},
  "handleMouseEnter": function () {},
  "handleMouseLeave": function () {},
  "render": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUpdate": function () {},
  "componentDidUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactDataGridPlugins.ToolsPanel.AdvancedToolbar.prototype = {
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.ToolsPanel.GroupedColumnsPanel.prototype = {
  "getHandlerId": function () {},
  "getDecoratedComponentInstance": function () {},
  "shouldComponentUpdate": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUnmount": function () {},
  "receiveProps": function () {},
  "receiveType": function () {},
  "handleChange": function () {},
  "dispose": function () {},
  "handleChildRef": function () {},
  "getCurrentState": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.ToolsPanel.GroupedColumnsPanel.DecoratedComponent.prototype = {
  "getPanelInstructionMessage": function () {},
  "renderGroupedColumns": function () {},
  "renderOverlay": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Draggable.Container.prototype = {
  "getDecoratedComponentInstance": function () {},
  "getManager": function () {},
  "getChildContext": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Draggable.Container.DecoratedComponent.prototype = {
  "getRows": function () {},
  "renderGrid": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Draggable.DraggableHeaderCell.prototype = {
  "getHandlerId": function () {},
  "getDecoratedComponentInstance": function () {},
  "shouldComponentUpdate": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUnmount": function () {},
  "receiveProps": function () {},
  "receiveType": function () {},
  "handleChange": function () {},
  "dispose": function () {},
  "handleChildRef": function () {},
  "getCurrentState": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Draggable.DraggableHeaderCell.DecoratedComponent.prototype = {
  "componentDidMount": function () {},
  "setScrollLeft": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Draggable.RowActionsCell.prototype = {
  "getHandlerId": function () {},
  "getDecoratedComponentInstance": function () {},
  "shouldComponentUpdate": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUnmount": function () {},
  "receiveProps": function () {},
  "receiveType": function () {},
  "handleChange": function () {},
  "dispose": function () {},
  "handleChildRef": function () {},
  "getCurrentState": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Draggable.RowActionsCell.DecoratedComponent.prototype = {
  "renderRowIndex": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Filters.NumericFilter.prototype = {
  "filterValues": function () {},
  "getRules": function () {},
  "handleKeyPress": function () {},
  "handleChange": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
ReactDataGridPlugins.Filters.AutoCompleteFilter.prototype = {
  "componentWillReceiveProps": function () {},
  "getOptions": function () {},
  "columnValueContainsSearchTerms": function () {},
  "filterValues": function () {},
  "handleChange": function () {},
  "render": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {}
};
/**********************************************************************
 * End Generated Extern for ReactDataGridPlugins
 /**********************************************************************/
